When would you want to use a remote repository rather than keeping all your work local?
We want it in several situations, for example: for baking up my project or for sharing my project with other people.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Because I might want to test or show to anybody my changes before share trough the remote repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
All of them creates a copy of a repository.

Branches simply create a new label pointing the last commit of the active repository brach, and I can use it to develop new features that I wantn't to be in the original branch (usually master) yet.

Clones, usually, create a new local repositoy from a remote, so I can edit de files from my pc to share later, or simply to make a local review.

A fork creates a new remote repository apart from the original one, so I can do whatever I like without modifiying the original.

What is the benefit of having a copy of the last known state of the remote stored locally?
Its very useful to known if somebody has update the remote repository.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I can collaborate using only Git, but with GitHub we have the pull requests option to collaborate easier.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
Maybe when I don't own the master barnch and I want to suggest a change. In addition, creating a new branch allows to test and review the proposal by others without breaking the master. However working directly in master is faster and easier, but its riskier too.
